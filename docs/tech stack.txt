We wanted to use a python backend with our experience, so we considered two options: Flask and Django. We chose Django because there are many resources and it is easy to prototype with. Also, creating a project using Django allows us to compartmentalize the project into several smaller apps, each of which serves its own purpose. Since our web app consists of a variety of components (logging in, hosting or joining, and the actual restaurant finding), we can make full use of Django to separate the parts cleanly. To fulfill the database requirement we use Djangoâ€™s support with Postgres. We choose Postres over other alternative SQL databases because our team had experience with it. The frontend is designed with Bootstrap so we can design a nice interface without the hassle of HTML and CSS. Django has a lot of official and third party Bootstrap support, which facilitates the design component of the web app.
