Pitch 1

When2Eat

Users will share a url to their friends to form a group. Each user would log in with their google account to access their calendar. Users can also specify hours or days in advance for a specific time slot to search for, and ask the others if they are available within that time range. This feature would be more useful for those who do not store event information on their google calendar. The app will then find a time that all of them are free, and access their location. Using the location it would find nearby restaurants around that are open at the time they are available. One can choose to use their current location, or the location of the last calendar item before the meeting to eat. If no location is specified, then the location of the remaining users will be used. It will also calculate the time needed for transportation, time spent at the restaurant eating, and time needed to get to their next location on their calendar. The app can create a calendar event and add the users as guests. If the meeting is not possible, then the app would inform them. We will enhance the restaurant choices with yelp information, and have users select their preferences for restaurants. An algorithm could decide the best restaurant that satisfy the most preferences. Optionally, we could add it to a Facebook messenger bot to make the process more interactive.
A database will be used to store the userâ€™s information as they fill out their portion to come to a consensus. This information could change over time, and once everyone has filled it out, our algorithm would use it to find the best matching restaurants.

APIs
https://developers.google.com/calendar/
https://www.yelp.com/developers
https://developers.google.com/places/web-service/search
https://developers.google.com/maps/documentation/distance-matrix/intro
https://developers.facebook.com/docs/messenger-platform/


Pitch 2

Cryptocurrency fluctuations using news/social media

The app will analyze the ability of news and social media data to predict price fluctuations for three cryptocurrencies. Traditional supervised learning algorithms will be utilized for text-based sentiment classification. Daily news and social media data will be labeled based on actual price changes one day in the future for each coin, rather than on positive or negative sentiment. By taking this approach, the model is able to directly predict price fluctuations instead of needing to first predict sentiment. Data input to the model comes in two forms. First, we obtained daily price data for bitcoin, ethereal, litecoin from api with cryptocurrency prices (i.e. CoinMarketCap or ICObench). Next, use online scraping scripts to acquire news articles relating to cryptocurrency. Then use the Twitter API to collect an equal amount of tweets relating to each respective currency. 

API: coinmarketcap, twitter api, nyt article search api, IBM Watson 
